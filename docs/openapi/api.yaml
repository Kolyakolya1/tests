openapi: 3.0.0
info:
  version: 1.0.0
  title: Fridge Master
servers:
  - url: http://127.0.0.1/api/v1
    description: Test server
paths:
  /locations:
    get:
      tags:
        - Locations
      summary: List all locations
      operationId: listlocations
      responses:
        200:
          description: Array of locations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locations'
        403:
                $ref: '#/components/responses/NotAuthorizedError'
        default:
          $ref: '#/components/responses/UnexpectedError'
  /blocks:
    post:
      tags:
        - Blocks
      summary: Get required number of blocks
      operationId: checkblocks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                location_id:
                  type: integer
                  description: Location id
                  example: 10
                  required: true
                product_volume:
                  type: number
                  description: Product volume
                  example: 100
                  required: true
                storage_temperature:
                  type: number
                  description: Storage temperature
                  example: -5
                  required: true
                storage_period_from:
                  type: string
                  format: date
                  description: Strage period from
                  example: '2022/09/12'
                  required: true
                storage_period_to:
                  type: integer
                  description: Storage period to
                  example: 5
                  maximum: 24
      responses:
        200:
          description: Required number of blocks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blocks'
        403:
          $ref: '#/components/responses/NotAuthorizedError'
        422:
          $ref: '#/components/responses/ValidationErrorsResponse'
        default:
          $ref: '#/components/responses/UnexpectedError'




components:
  schemas:
    Locations:
      type: array
      items:
        $ref: '#/components/schemas/Location'
    Location:
      type: object
      properties:
        id:
          type: integer
          example: 10
        name:
          type: string
          example: Toronto
        free_blocks:
          type: integer
          example: 10
    Blocks:
      type: object
      properties:
        required_number_of_blocks:
          type: integer
          description: Required number of blocks
          example: 10
        storage_cost:
          type: number
          description: Storage cost
          example: 1000
        free_blocks:
          type: boolean
          description: Free blocks
          example: true



  responses:
    NotAuthorizedError:
      description: 'Unauthorized'
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: array
                description: Technical error
                items:
                  type: string
                  example: Unauthorized
              message:
                type: string
                description: User message
                example: You do not have access
              type:
                type: string
                description: Error type
                example: UnauthorizedException
    UnexpectedError:
      description: Unexpected error
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: array
                description: Unexpected error
                items:
                  type: string
                  example: Unexpected error
              message:
                type: string
                description: User message
                example: Unexpected error
              type:
                type: string
                description: Error type
                example: UnexpectedException
    ValidationErrorsResponse:
      description: Validation errors
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: object
                properties:
                  location_id:
                    type: array
                    items:
                      type: string
                      example: The attribute must be an integer
                  product_volume:
                    type: array
                    items:
                      type: string
                      example: The attribute must be a number
                  storage_temperature:
                    type: array
                    items:
                      type: string
                      example: The attribute must be a number  and  maximum 0
                  storage_period_from:
                    type: array
                    items:
                      type: string
                      example: The attribute is not a valid date
                  storage_period_to:
                    type: array
                    items:
                      type: string
                      example: The attribute must be an integer and  maximum 24
              message:
                type: string
                example: 'Incorrect data sent'
              type:
                type: string
                example: ValidationException




